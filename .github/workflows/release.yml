name: Build and Release FexFlasher
permissions:
  contents: write  # Needed to create releases

on:
  push:
    tags:
      - "v*"  # Trigger only on version tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'  # Use your project’s .NET version

      # 3️⃣ Cache NuGet packages for faster restore
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: nuget-

      # 4️⃣ Restore dependencies
      - name: Restore dependencies
        run: dotnet restore FexFlasher.csproj

      # 5️⃣ Build project in Release mode
      - name: Build project
        run: dotnet build FexFlasher.csproj -c Release --no-restore

      # 6️⃣ Publish project to get .exe
      - name: Publish project
        run: dotnet publish FexFlasher.csproj -c Release -o published --no-restore

      # 7️⃣ Create zip including .exe and .fex
      - name: Create zip with exe and fex
        run: |
          $zipPath = "FexFlasher-${{ github.ref_name }}.zip"
          $itemsToZip = @("published\*", "files\*.fex")  # Adjust path if .fex is elsewhere
          Compress-Archive -Path $itemsToZip -DestinationPath $zipPath -Force

      # 8️⃣ Upload zip to GitHub Release
      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: FexFlasher-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
